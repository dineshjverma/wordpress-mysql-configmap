# wordpress + mysql:5.6 using configmaps

apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: backend
spec: {}
status: {}

---

apiVersion: v1
data:
  MYSQL_DATABASE: unnati
  MYSQL_ROOT_PASSWORD: alexa
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: mysqldatabse
  namespace: backend

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mysql-dep
  name: mysql-dep
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-dep
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mysql-dep
    spec:
      containers:
      - image: docker.io/mysql:5.6
        name: mysql
        ports:
        - containerPort: 3306
        envFrom:
         - configMapRef:
              name: mysqldatabse 
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: mysql-dep
  name: mysql
  namespace: backend
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mysql-dep
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: frontend
spec: {}
status: {}

---

apiVersion: v1
data:
  WORDPRESS_DB_HOST: mysql.backend.svc.cluster.local
  WORDPRESS_DB_NAME: unnati
  WORDPRESS_DB_PASSWORD: alexa
  WORDPRESS_DB_USER: root
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: wordpressconfigmap
  namespace: frontend

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: wordpress
  name: wordpress
  namespace: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: wordpress
    spec:
      containers:
      - image: docker.io/wordpress
        name: wordpress
        ports:
        - containerPort: 80
        envFrom:
         - configMapRef:
             name: wordpressconfigmap
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: wordpress
  name: wordpress
  namespace: frontend
spec:
  ports:
  - port: 18080
    protocol: TCP
    targetPort: 80
  selector:
    app: wordpress
  type: NodePort
status:
  loadBalancer: {}
